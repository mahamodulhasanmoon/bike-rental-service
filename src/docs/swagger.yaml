openapi: 3.0.0
info:
  title: Bike Rental Reservation System Backend
  description: API documentation for Jhankar Mahbub's Bike Rental Reservation System
  version: 1.0.0
  termsOfService: https://example.com/terms
  contact:
    name: Mahamodul Hasan Moon
    email: mahamodulhasan.moon@gmail.com
    url: https://mahamodulhasan.me
  license:
    name: Apache License, Version 2.0
    url: https://apache.com
servers:
  - description: Development
    url: http://localhost:8000/api
paths:
  /auth/signup:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSignup'
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /auth/login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        '200':
          description: User logged in successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
  /users/me:
    get:
      summary: Get user profile
      security:
        - BearerAuth: []
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      summary: Update user profile
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      responses:
        '200':
          description: Profile updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /bikes:
    post:
      summary: Add a new bike (Admin Only)
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bike'
      responses:
        '200':
          description: Bike added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bike'
    get:
      summary: Get all bikes
      responses:
        '200':
          description: Bikes retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bike'
  /bikes/{id}:
    put:
      summary: Update bike details (Admin Only)
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BikeUpdate'
      responses:
        '200':
          description: Bike updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bike'
    delete:
      summary: Delete a bike (Admin Only)
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Bike deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bike'
  /rentals:
    post:
      summary: Create a rental
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rental'
      responses:
        '200':
          description: Rental created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rental'
    get:
      summary: Get all rentals for user (My rentals)
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Rentals retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rental'
  /rentals/{id}/return:
    put:
      summary: Return a bike (Admin Only)
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Bike returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rental'
components:
  schemas:
    UserSignup:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
        phone:
          type: string
        address:
          type: string
        role:
          type: string
          enum: [admin, user]
      required:
        - name
        - email
        - password
        - role
    UserLogin:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password
    LoginResponse:
      type: object
      properties:
        token:
          type: string
        data:
          $ref: '#/components/schemas/User'
    User:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        address:
          type: string
        role:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
    UserUpdate:
      type: object
      properties:
        name:
          type: string
        phone:
          type: string
    Bike:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        pricePerHour:
          type: number
        cc:
          type: integer
        year:
          type: integer
        model:
          type: string
        brand:
          type: string
    BikeUpdate:
      type: object
      properties:
        pricePerHour:
          type: number
    Rental:
      type: object
      properties:
        bikeId:
          type: string
        startTime:
          type: string
      required:
        - bikeId
        - startTime
